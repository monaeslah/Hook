{"ast":null,"code":"var _jsxFileName = \"/Users/arash/Desktop/Mona/todos/src/componants/list/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListInput from \"./inputList\";\nimport ShowList from \"./showList\";\nimport { createTask, deletTodo, filterByActive, filterByAll, filterByComplete, clearAllcompleted } from \"../../redux/pages/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = props => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(store => store.addTodos);\n  const [title, setTitle] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n  const Submit = () => {\n    dispatch(createTask(title, completed));\n    setTitle(\"\");\n  };\n  const delet = id => {\n    dispatch(deletTodo(id));\n  };\n  const setF = e => {\n    const value = e.target.value;\n    setFilter(value);\n    if (value === \"Complete\") {\n      dispatch(filterByComplete());\n    } else if (value === \"Active\") {\n      dispatch(filterByActive());\n    } else {\n      dispatch(filterByAll());\n    }\n  };\n  console.log(\"th\");\n  const clearAll = () => {\n    dispatch(clearAllcompleted());\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-bg theme \",\n      children: !props.darkMode ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../../assets/img/bg-desktop-dark.jpg\"),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../../assets/img/bg-desktop-light.jpg\"),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      children: [/*#__PURE__*/_jsxDEV(ListInput, {\n        title: title,\n        setTitle: setTitle,\n        darkMode: props.darkMode,\n        moodChange: props.moodChange,\n        submit: Submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShowList, {\n        todos: todos,\n        filter: filter,\n        delet: delet,\n        setFilter: setFilter,\n        completed: completed,\n        setCompleted: setCompleted,\n        setF: setF,\n        clearAll: clearAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ToDo, \"8wphBBhNm60ewUKhlQvY8oOuCBM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","ListInput","ShowList","createTask","deletTodo","filterByActive","filterByAll","filterByComplete","clearAllcompleted","ToDo","props","dispatch","todos","store","addTodos","title","setTitle","completed","setCompleted","filter","setFilter","Submit","delet","id","setF","e","value","target","console","log","clearAll","darkMode","require","moodChange"],"sources":["/Users/arash/Desktop/Mona/todos/src/componants/list/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListInput from \"./inputList\";\nimport ShowList from \"./showList\";\nimport {\n  createTask,\n  deletTodo,\n  filterByActive,\n  filterByAll,\n  filterByComplete,\n  clearAllcompleted\n} from \"../../redux/pages/action\";\n\nconst ToDo = (props) => {\n  const dispatch = useDispatch();\n  const todos = useSelector((store) => store.addTodos);\n  const [title, setTitle] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n\n  const Submit = () => {\n    dispatch(createTask(title, completed));\n    setTitle(\"\")\n  };\n  const delet = (id) => {\n    dispatch(deletTodo(id));\n  };\n  const setF = (e) => {\n    const value = e.target.value;\n    setFilter(value);\n    if (value === \"Complete\") {\n      dispatch(filterByComplete());\n    } else if (value === \"Active\") {\n      dispatch(filterByActive());\n    } else {\n      dispatch(filterByAll());\n    }\n  };\nconsole.log(\"th\")\n  const clearAll = () => {\n    dispatch(clearAllcompleted());\n  };\n\n  return (\n    <>\n      <div className={\"app-bg theme \"}>\n        {!props.darkMode ? (\n          <img src={require(\"../../assets/img/bg-desktop-dark.jpg\")} alt=\"\" />\n        ) : (\n          <img src={require(\"../../assets/img/bg-desktop-light.jpg\")} alt=\"\" />\n        )}\n      </div>\n      <div className=\"app-body\">\n        <ListInput\n          title={title}\n          setTitle={setTitle}\n          darkMode={props.darkMode}\n          moodChange={props.moodChange}\n          submit={Submit}\n        />\n\n        <ShowList\n          todos={todos}\n          filter={filter}\n          delet={delet}\n          setFilter={setFilter}\n          completed={completed}\n          setCompleted={setCompleted}\n          setF={setF}\n          clearAll={clearAll}\n        />\n      </div>\n     \n    </>\n  );\n};\n\nexport default ToDo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SACEC,UAAU,EACVC,SAAS,EACTC,cAAc,EACdC,WAAW,EACXC,gBAAgB,EAChBC,iBAAiB,QACZ,0BAA0B;AAAC;AAAA;AAElC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMuB,MAAM,GAAG,MAAM;IACnBV,QAAQ,CAACR,UAAU,CAACY,KAAK,EAAEE,SAAS,CAAC,CAAC;IACtCD,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EACD,MAAMM,KAAK,GAAIC,EAAE,IAAK;IACpBZ,QAAQ,CAACP,SAAS,CAACmB,EAAE,CAAC,CAAC;EACzB,CAAC;EACD,MAAMC,IAAI,GAAIC,CAAC,IAAK;IAClB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BN,SAAS,CAACM,KAAK,CAAC;IAChB,IAAIA,KAAK,KAAK,UAAU,EAAE;MACxBf,QAAQ,CAACJ,gBAAgB,EAAE,CAAC;IAC9B,CAAC,MAAM,IAAImB,KAAK,KAAK,QAAQ,EAAE;MAC7Bf,QAAQ,CAACN,cAAc,EAAE,CAAC;IAC5B,CAAC,MAAM;MACLM,QAAQ,CAACL,WAAW,EAAE,CAAC;IACzB;EACF,CAAC;EACHsB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACf,MAAMC,QAAQ,GAAG,MAAM;IACrBnB,QAAQ,CAACH,iBAAiB,EAAE,CAAC;EAC/B,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAE,eAAgB;MAAA,UAC7B,CAACE,KAAK,CAACqB,QAAQ,gBACd;QAAK,GAAG,EAAEC,OAAO,CAAC,sCAAsC,CAAE;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,gBAEpE;QAAK,GAAG,EAAEA,OAAO,CAAC,uCAAuC,CAAE;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IACnE;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB,QAAC,SAAS;QACR,KAAK,EAAEjB,KAAM;QACb,QAAQ,EAAEC,QAAS;QACnB,QAAQ,EAAEN,KAAK,CAACqB,QAAS;QACzB,UAAU,EAAErB,KAAK,CAACuB,UAAW;QAC7B,MAAM,EAAEZ;MAAO;QAAA;QAAA;QAAA;MAAA,QACf,eAEF,QAAC,QAAQ;QACP,KAAK,EAAET,KAAM;QACb,MAAM,EAAEO,MAAO;QACf,KAAK,EAAEG,KAAM;QACb,SAAS,EAAEF,SAAU;QACrB,SAAS,EAAEH,SAAU;QACrB,YAAY,EAAEC,YAAa;QAC3B,IAAI,EAAEM,IAAK;QACX,QAAQ,EAAEM;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBAEL;AAEP,CAAC;AAAC,GA9DIrB,IAAI;EAAA,QACSV,WAAW,EACdC,WAAW;AAAA;AAAA,KAFrBS,IAAI;AAgEV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}