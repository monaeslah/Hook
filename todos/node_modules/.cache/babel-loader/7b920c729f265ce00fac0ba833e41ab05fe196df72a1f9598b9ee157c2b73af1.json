{"ast":null,"code":"var _jsxFileName = \"/Users/arash/Desktop/Mona/todos/src/componants/list/showList.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { setStateAction, updateTodo } from \"../../redux/pages/action\";\nimport iconCross from \"../../assets/img/icon-cross.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShowList = props => {\n  _s();\n  const dispatch = useDispatch();\n  const [items, setItems] = useState(props.todos);\n  useEffect(() => {\n    setItems(props.todos);\n  }, [props.todos]);\n  const controlComplete = id => {\n    dispatch(updateTodo(id));\n  };\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n  const dragStart = (e, position) => {\n    dragItem.current = position;\n  };\n  const dragEnter = (e, position) => {\n    dragOverItem.current = position;\n  };\n  const drop = e => {\n    const copyListItems = [...items];\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setItems(copyListItems);\n    dispatch(setStateAction(copyListItems));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.filter(todo => {\n          if (props.filter === \"Complete\") return todo.completed;\n          if (props.filter === \"Active\") {\n            return !todo.completed;\n          }\n          return true;\n        }).map((todo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `flex align-center ${todo.completed ? \"completed\" : \"\"}`,\n            onDragStart: e => dragStart(e, index),\n            onDragEnter: e => dragEnter(e, index),\n            onDragEnd: drop,\n            \"data-index\": index,\n            draggable: true,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"checkbox\",\n              type: \"checkbox\",\n              onChange: () => controlComplete(todo.id),\n              checked: todo.completed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => controlComplete(todo.id),\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconCross,\n              alt: \"\",\n              onClick: () => props.delet(todo.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex filter align-center space-between\",\n        children: [!(items.length === 0) ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [items.length, \" items left\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex align-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"All\",\n            className: `${props.filter === \"All\" ? \"active\" : \"\"}`,\n            onClick: props.setF,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"Active\",\n            className: `${props.filter === \"Active\" ? \"active\" : \"\"}`,\n            onClick: props.setF,\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"Complete\",\n            className: `${props.filter === \"Complete\" ? \"active\" : \"\"}`,\n            onClick: props.setF,\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.clearAll,\n          children: \"Clear Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"flex justfy-center\",\n      children: \"Drag and drop to reorder list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ShowList, \"XvadXvyztedZmzE/xO9rZYHP4AE=\", false, function () {\n  return [useDispatch];\n});\n_c = ShowList;\nexport default ShowList;\nvar _c;\n$RefreshReg$(_c, \"ShowList\");","map":{"version":3,"names":["React","useRef","useState","useEffect","setStateAction","updateTodo","iconCross","useDispatch","useSelector","ShowList","props","dispatch","items","setItems","todos","controlComplete","id","dragItem","dragOverItem","dragStart","e","position","current","dragEnter","drop","copyListItems","dragItemContent","splice","filter","todo","completed","map","index","title","delet","length","setF","clearAll"],"sources":["/Users/arash/Desktop/Mona/todos/src/componants/list/showList.js"],"sourcesContent":["import React, { useRef, useState,useEffect } from \"react\";\nimport { setStateAction, updateTodo } from \"../../redux/pages/action\";\nimport iconCross from \"../../assets/img/icon-cross.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst ShowList = (props) => {\n  const dispatch = useDispatch();\n  \n  const [items, setItems] = useState(props.todos);\n  useEffect(() => {\n    setItems(props.todos);\n  }, [props.todos])\n  const controlComplete = (id) => {\n    dispatch(updateTodo(id));\n  };\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n    dragItem.current = position;\n  };\n  const dragEnter = (e, position) => {\n    dragOverItem.current = position;\n  };\n\n  const drop = (e) => {\n    const copyListItems = [...items];\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    \n    setItems(copyListItems);\n    dispatch(setStateAction(copyListItems));\n  };\n  \n  \n  return (\n    <>\n      <div className=\"todo-list\">\n        \n        <ul>\n          {items\n            .filter((todo) => {\n              if (props.filter === \"Complete\") return todo.completed;\n              if (props.filter === \"Active\") {\n                return !todo.completed;\n              }\n              return true;\n            })\n            .map((todo, index) => {\n              return (\n                <li\n                  className={`flex align-center ${\n                    todo.completed ? \"completed\" : \"\"\n                  }`}\n                  onDragStart={(e) => dragStart(e, index)}\n                  onDragEnter={(e) => dragEnter(e, index)}\n                  onDragEnd={drop}\n                  key={index}\n                  data-index={index}\n                  draggable\n                >\n                  <input\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    onChange={() => controlComplete(todo.id)}\n                    checked={todo.completed}\n                  />\n                  <p onClick={() => controlComplete(todo.id)}>{todo.title}</p>\n\n                  <img\n                    src={iconCross}\n                    alt=\"\"\n                    onClick={() => props.delet(todo.id)}\n                  />\n                </li>\n              );\n            })}\n        </ul>\n\n        <div className=\"flex filter align-center space-between\">\n          {!(items.length === 0) ? \n          (\n            <p>{items.length} items left</p>\n          ) :\n           (\n            <div className=\"empty\">\n              \n            </div>\n          )}\n          <div className=\"flex align-center\">\n            <button\n              value=\"All\"\n              className={`${props.filter === \"All\" ? \"active\" : \"\"}`}\n              onClick={props.setF}\n            >\n              All\n            </button>\n\n            {/* onClick={filterControl} */}\n            <button\n              value=\"Active\"\n              className={`${props.filter === \"Active\" ? \"active\" : \"\"}`}\n              onClick={props.setF}\n            >\n              Active\n            </button>\n            <button\n              value=\"Complete\"\n              className={`${props.filter === \"Complete\" ? \"active\" : \"\"}`}\n              onClick={props.setF}\n            >\n              Completed\n            </button>\n          </div>\n          <button onClick={props.clearAll}>Clear Completed</button>\n        </div>\n      </div>\n      <p className=\"flex justfy-center\">Drag and drop to reorder list</p>\n    </>\n  );\n};\nexport default ShowList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}