{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport * as pages from './pages/reducer.js';\nimport thunk from 'redux-thunk';\nconst persistConfig = {\n  key: 'foo',\n  storage\n};\nconst middleware = [thunk];\nconst persistedReducer = persistReducer(persistConfig, combineReducers({\n  ...pages\n}));\nconst store = createStore(persistedReducer, applyMiddleware(...middleware));\nlet persistor = persistStore(store);\nexport default store;\nexport { persistor };","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","storage","persistStore","persistReducer","pages","thunk","persistConfig","key","middleware","persistedReducer","store","persistor"],"sources":["/Users/arash/Desktop/Mona/todos/src/redux/store.js"],"sourcesContent":["import {createStore, combineReducers,applyMiddleware} from \"redux\";\nimport storage from 'redux-persist/lib/storage';\nimport {persistStore, persistReducer} from 'redux-persist';\nimport * as pages from './pages/reducer.js';\nimport thunk from 'redux-thunk'\n\n\nconst persistConfig = {\n    key: 'foo',\n    storage,\n};\nconst middleware =[thunk]\nconst persistedReducer = persistReducer(persistConfig, combineReducers({\n    ...pages,\n   \n}));\n\nconst store = createStore(persistedReducer,applyMiddleware(...middleware));\n\nlet persistor = persistStore(store);\nexport default store;\nexport {persistor};\n\n\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,eAAe,EAACC,eAAe,QAAO,OAAO;AAClE,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAAQC,YAAY,EAAEC,cAAc,QAAO,eAAe;AAC1D,OAAO,KAAKC,KAAK,MAAM,oBAAoB;AAC3C,OAAOC,KAAK,MAAM,aAAa;AAG/B,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,KAAK;EACVN;AACJ,CAAC;AACD,MAAMO,UAAU,GAAE,CAACH,KAAK,CAAC;AACzB,MAAMI,gBAAgB,GAAGN,cAAc,CAACG,aAAa,EAAEP,eAAe,CAAC;EACnE,GAAGK;AAEP,CAAC,CAAC,CAAC;AAEH,MAAMM,KAAK,GAAGZ,WAAW,CAACW,gBAAgB,EAACT,eAAe,CAAC,GAAGQ,UAAU,CAAC,CAAC;AAE1E,IAAIG,SAAS,GAAGT,YAAY,CAACQ,KAAK,CAAC;AACnC,eAAeA,KAAK;AACpB,SAAQC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}